/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RoutesImport } from './routes/routes'
import { Route as RouteTreeImport } from './routes/route-tree'

// Create/Update Routes

const RoutesRoute = RoutesImport.update({
  id: '/routes',
  path: '/routes',
  getParentRoute: () => rootRoute,
} as any)

const RouteTreeRoute = RouteTreeImport.update({
  id: '/route-tree',
  path: '/route-tree',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/route-tree': {
      id: '/route-tree'
      path: '/route-tree'
      fullPath: '/route-tree'
      preLoaderRoute: typeof RouteTreeImport
      parentRoute: typeof rootRoute
    }
    '/routes': {
      id: '/routes'
      path: '/routes'
      fullPath: '/routes'
      preLoaderRoute: typeof RoutesImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/route-tree': typeof RouteTreeRoute
  '/routes': typeof RoutesRoute
}

export interface FileRoutesByTo {
  '/route-tree': typeof RouteTreeRoute
  '/routes': typeof RoutesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/route-tree': typeof RouteTreeRoute
  '/routes': typeof RoutesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/route-tree' | '/routes'
  fileRoutesByTo: FileRoutesByTo
  to: '/route-tree' | '/routes'
  id: '__root__' | '/route-tree' | '/routes'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  RouteTreeRoute: typeof RouteTreeRoute
  RoutesRoute: typeof RoutesRoute
}

const rootRouteChildren: RootRouteChildren = {
  RouteTreeRoute: RouteTreeRoute,
  RoutesRoute: RoutesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/route-tree",
        "/routes"
      ]
    },
    "/route-tree": {
      "filePath": "route-tree.tsx"
    },
    "/routes": {
      "filePath": "routes.ts"
    }
  }
}
ROUTE_MANIFEST_END */
